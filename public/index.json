[
{
	"uri": "//localhost:1313/1-introduce/aws-datasync-for-cross-account-s3-migrations/",
	"title": "Comparison with other methods",
	"tags": [],
	"description": "",
	"content": "Benefits of Using AWS DataSync for Cross-Account S3 Migrations Using AWS DataSync to migrate data between S3 buckets across AWS accounts offers several advantages compared to other methods:\nAutomation and Simplification Automates Complex Workflows: Handles the heavy lifting without the need for intricate scripting. Simplified Management: Offers a unified interface to manage and track migrations. Performance and Integrity High-Speed Transfers: Optimized for fast speeds, surpassing traditional methods. Built-in Data Validation: Automatically verifies data integrity during the transfer. Security and Monitoring Encryption in Transit: Ensures secure data transfers with encryption. Detailed Monitoring and Logging: Integrates with AWS CloudWatch and AWS CloudTrail for in-depth monitoring. Cost and Efficiency Cost-Effective: Flat, per-gigabyte pricing avoids operational overhead. Bandwidth Throttling: Controls the bandwidth used, reducing impact on other services. Comparison to Other Methods Manual Copying Slower with a higher risk of human error. Lacks automatic data integrity checks. Impractical for large datasets. Custom Scripts Requires time for development and ongoing maintenance. Potentially less secure without proper handling. No integrated monitoring or logging capabilities. AWS S3 Cross-Account Replication Designed for ongoing replication, not one-time large migrations. Necessitates versioning, which may be undesirable. Does not optimize for performance as DataSync does. AWS DataSync shines in large-scale migrations where automation, speed, and data integrity are critical, reducing both effort and risk compared to alternative methods.\n"
},
{
	"uri": "//localhost:1313/2-prerequiste/2.1-iam-role/",
	"title": "Create an IAM Role",
	"tags": [],
	"description": "",
	"content": "To perform cross-account data transfer with AWS DataSync, you need an IAM role in your source account that grants DataSync permission to write to the S3 bucket in your destination account.\nCreating the IAM Role for DataSync in Your Source Account Normally, AWS DataSync can create a role automatically with the necessary permissions when you set up a transfer location for an S3 bucket through the console. However, for cross-account transfers, this role must be created manually.\nTo Create the IAM Role: Log in to the AWS Management Console with your source account credentials. Navigate to the IAM console at https://console.aws.amazon.com/iam/. In the left navigation pane, under Access management, select Roles, then click Create role. On the Select trusted entity page, set Trusted entity type to AWS service. For Use case, choose DataSync from the dropdown list, then click Next. Skip the Add permissions step by clicking Next. Provide a name for your role and click Create role. For detailed instructions, refer to Creating a role for an AWS service (console) in the IAM User Guide.\nAttaching a Custom Policy to the IAM Role The IAM role needs a policy that permits DataSync to write to the destination S3 bucket.\nTo Attach a Custom Policy to Your IAM Role: On the Roles page of the IAM console, find the role you just created and select its name.\nOn the role\u0026rsquo;s detail page, go to the Permissions tab. Click Add permissions then Create inline policy. Go to the JSON tab and perform the following:\nPaste the JSON policy below into the policy editor: { \u0026#34;Version\u0026#34;: \u0026#34;2012-10-17\u0026#34;, \u0026#34;Statement\u0026#34;: [ { \u0026#34;Action\u0026#34;: [ \u0026#34;s3:GetBucketLocation\u0026#34;, \u0026#34;s3:ListBucket\u0026#34;, \u0026#34;s3:ListBucketMultipartUploads\u0026#34; ], \u0026#34;Effect\u0026#34;: \u0026#34;Allow\u0026#34;, \u0026#34;Resource\u0026#34;: \u0026#34;arn:aws:s3:::destination-bucket\u0026#34; }, { \u0026#34;Action\u0026#34;: [ \u0026#34;s3:AbortMultipartUpload\u0026#34;, \u0026#34;s3:DeleteObject\u0026#34;, \u0026#34;s3:GetObject\u0026#34;, \u0026#34;s3:ListMultipartUploadParts\u0026#34;, \u0026#34;s3:PutObject\u0026#34;, \u0026#34;s3:GetObjectTagging\u0026#34;, \u0026#34;s3:PutObjectTagging\u0026#34; ], \u0026#34;Effect\u0026#34;: \u0026#34;Allow\u0026#34;, \u0026#34;Resource\u0026#34;: \u0026#34;arn:aws:s3:::destination-bucket/*\u0026#34; } ] } Note: Replace destination-bucket with the actual name of the S3 bucket in your destination account. For example: "
},
{
	"uri": "//localhost:1313/3-createdatasynclocation/3.1-createsourcelocation/",
	"title": "Create Source Location",
	"tags": [],
	"description": "",
	"content": "After setting up the destination location for your S3 bucket in the target account, the next step in our cross-account data migration process is to establish a source location in AWS DataSync. This source location will reference the S3 bucket in your source AWS account from which DataSync will read data.\nCreating a Source Location in DataSync Creating a source location involves specifying the S3 bucket that serves as the data origin and assigning the necessary permissions for DataSync to access this bucket.\nTo Create a Source Location: Log Into AWS Management Console: Ensure you are logged into the AWS Management Console under your source account.\nNavigate to AWS DataSync: Open the AWS DataSync service by searching for it in the service search bar or by finding it under \u0026ldquo;Storage\u0026rdquo; in the Services menu.\nStart Creating a New Location: Within the DataSync dashboard, click on Create location to begin the setup for a new source location.\nSelect Your Source Storage Service: Choose Amazon S3 as the location type. This indicates the source of your data for the migration task.\nConfigure S3 Bucket Access:\nS3 Bucket Name: Enter the name of the S3 bucket in your source account that contains the data you wish to migrate. IAM Role: Provide the ARN of the IAM role that DataSync will assume to access the source S3 bucket. This role must have permissions to read from the bucket and list its contents. Review and Create: Once you have filled in the necessary information, review your settings to ensure everything is correct. Click Create location to finalize the creation of your source location.\nVerification After creating the source location, you will see it listed in the Locations section of the AWS DataSync console. Ensure that the location status is available, indicating that DataSync can access the S3 bucket and is ready to start transferring data.\nBy completing this step, you have successfully set up the source location for your cross-account S3 migration. The next step will involve creating a DataSync task that uses this source location and the destination location you set up previously to transfer data across AWS accounts.\n"
},
{
	"uri": "//localhost:1313/",
	"title": "Efficient Data Transfer Across AWS Accounts with DataSync and Amazon S3",
	"tags": [],
	"description": "",
	"content": "Data Transfer Across AWS Accounts with DataSync and Amazon S3 Overview In this workshop, you will deep into the essentials of transferring data from Amazon S3 to Amazon S3 across AWS accounts Content Introduction to DataSync Preparation Steps Creating DataSync Location Create \u0026amp; S DataSync Task Resource Cleanup "
},
{
	"uri": "//localhost:1313/1-introduce/",
	"title": "Introduction",
	"tags": [],
	"description": "",
	"content": "Introduction to AWS DataSync AWS DataSync is an online data movement and discovery service that simplifies data migration and helps you quickly, easily, and securely transfer your file or object data to, from, and between AWS storage services.\nOn-premises storage transfers DataSync works with the following on-premises storage systems:\nNetwork File System (NFS) Server Message Block (SMB) Hadoop Distributed File Systems (HDFS) Object storage AWS storage transfers DataSync is compatible with the following AWS storage services:\nAmazon S3 Amazon EFS Amazon FSx for Windows File Server Amazon FSx for Lustre Amazon FSx for OpenZFS Amazon FSx for NetApp ONTAP Other cloud storage transfers DataSync also facilitates transfers to other cloud storage services including:\nGoogle Cloud Storage Microsoft Azure Blob Storage Microsoft Azure Files Wasabi Cloud Storage DigitalOcean Spaces Oracle Cloud Infrastructure Object Storage Cloudflare R2 Storage Backblaze B2 Cloud Storage NAVER Cloud Object Storage Alibaba Cloud Object Storage Service IBM Cloud Object Storage Seagate Lyve Cloud Edge storage transfers Additionally, DataSync works with edge storage services and devices such as:\nAmazon S3 compatible storage on AWS Snowball Edge AWS Snowcone Use cases The main use cases for DataSync include:\nDiscover data: Get visibility into your on-premises storage performance and utilization. AWS DataSync Discovery can also provide recommendations for migrating your data to AWS storage services. Migrate data: Move active datasets rapidly over the network into AWS storage services. DataSync includes automatic encryption and data integrity validation to help ensure that your data arrives securely, intact, and ready to use. Archive cold data: Move cold data stored in on-premises storage directly to durable and secure long-term storage classes such as S3 Glacier Flexible Retrieval or S3 Glacier Deep Archive. Replicate data: Copy data into any Amazon S3 storage class, choosing the most cost-effective storage class for your needs. You can also replicate data to Amazon EFS, FSx for Windows File Server, FSx for Lustre, or FSx for OpenZFS. Move data for timely in-cloud processing: Facilitate data movement in or out of AWS for processing, accelerating hybrid cloud workflows in various industries. Benefits Using DataSync, you can achieve the following benefits:\nSimplify migration planning: Minimize the time, effort, and costs associated with planning data migrations to AWS with automated data collection and recommendations from DataSync Discovery. Automate data movement: Easily move data over the network between storage systems and services with DataSync\u0026rsquo;s automated process and infrastructure management. Transfer data securely: With end-to-end security, including encryption and integrity validation, DataSync ensures that your data is transferred securely and intact. Move data faster: DataSync\u0026rsquo;s purpose-built network protocol and multi-threaded architecture accelerate data transfers, improving the speed of migrations and data-processing workflows. Reduce operational costs: DataSync\u0026rsquo;s flat, per-gigabyte pricing allows for cost-effective data movement, eliminating the need for custom scripts or expensive transfer tools. "
},
{
	"uri": "//localhost:1313/2-prerequiste/2.2-configure-s3-bucket/",
	"title": "Configure Destination S3 Bucket",
	"tags": [],
	"description": "",
	"content": "Ensuring that your destination account has full ownership of the data is crucial when transferring to an S3 bucket. This is achieved by disabling the bucket\u0026rsquo;s Access Control Lists (ACLs), which by default could grant access to other accounts.\nDisabling ACLs for Your S3 Bucket Ownership control is vital for maintaining data security standards. Follow these steps in your destination account to disable ACLs:\nLog in to the AWS Management Console of your destination account.\nAccess the Amazon S3 console at https://console.aws.amazon.com/s3/.\nFrom the left sidebar, click on Buckets.\nSelect the target S3 bucket to which you\u0026rsquo;re transferring data from the list.\nNavigate to the Permissions tab on the bucket\u0026rsquo;s detail page.\nUnder Object Ownership, click Edit.\nIf not already done, select the option for ACLs disabled (recommended).\nConfirm the change by clicking Save changes.\nDisabling ACLs ensures that all transferred data is owned by the destination account, aligning with best practices for data security. For further details, visit the Controlling ownership of objects and disabling ACLs section in the Amazon S3 User Guide.\nConfigure Your S3 Bucket Policy It\u0026rsquo;s time to adjust the S3 bucket policy in your destination account to recognize and accept the IAM role designed for DataSync operations from your source account.\nBy updating the bucket policy, you’ll grant the necessary permissions for two specific roles:\nThe first role is the one assigned to AWS DataSync in your source account, permitting it to write data to the destination bucket. The second role covers the necessary permissions for any users in your source account who will interact with AWS DataSync. Proceed with the following steps to ensure your destination S3 bucket has the correct permissions:\nWithin the Amazon S3 console of your destination account, navigate to the S3 bucket designated for data receipt. Access the Permissions tab on your bucket\u0026rsquo;s detail page. Click on Edit next to Bucket policy and revise the policy as follows: { \u0026#34;Version\u0026#34;: \u0026#34;2008-10-17\u0026#34;, \u0026#34;Statement\u0026#34;: [ { \u0026#34;Sid\u0026#34;: \u0026#34;DataSyncS3WriteAccess\u0026#34;, \u0026#34;Effect\u0026#34;: \u0026#34;Allow\u0026#34;, \u0026#34;Principal\u0026#34;: { \u0026#34;AWS\u0026#34;: \u0026#34;arn:aws:iam::\u0026lt;source-account-id\u0026gt;:role/\u0026lt;dataSync-role-in-source-account\u0026gt;\u0026#34; }, \u0026#34;Action\u0026#34;: [ \u0026#34;s3:GetBucketLocation\u0026#34;, \u0026#34;s3:ListBucket\u0026#34;, \u0026#34;s3:ListBucketMultipartUploads\u0026#34;, \u0026#34;s3:AbortMultipartUpload\u0026#34;, \u0026#34;s3:DeleteObject\u0026#34;, \u0026#34;s3:GetObject\u0026#34;, \u0026#34;s3:ListMultipartUploadParts\u0026#34;, \u0026#34;s3:PutObject\u0026#34;, \u0026#34;s3:GetObjectTagging\u0026#34;, \u0026#34;s3:PutObjectTagging\u0026#34; ], \u0026#34;Resource\u0026#34;: [ \u0026#34;arn:aws:s3:::\u0026lt;destination-bucket\u0026gt;\u0026#34;, \u0026#34;arn:aws:s3:::\u0026lt;destination-bucket\u0026gt;/*\u0026#34; ] }, { \u0026#34;Sid\u0026#34;: \u0026#34;UserAccessForDataSyncLocation\u0026#34;, \u0026#34;Effect\u0026#34;: \u0026#34;Allow\u0026#34;, \u0026#34;Principal\u0026#34;: { \u0026#34;AWS\u0026#34;: \u0026#34;arn:aws:iam::\u0026lt;source-account-id\u0026gt;:role/\u0026lt;user-in-source-account\u0026gt;\u0026#34; }, \u0026#34;Action\u0026#34;: \u0026#34;s3:ListBucket\u0026#34;, \u0026#34;Resource\u0026#34;: \u0026#34;arn:aws:s3:::\u0026lt;destination-bucket\u0026gt;\u0026#34; } ] } ⚠️ Important: There is an essential correction to the AWS documentation here. Where the policy references the IAM role for user permissions, it should actually reference an IAM user as follows: \u0026ldquo;AWS\u0026rdquo;: \u0026ldquo;arn:aws:iam::source-account-id:user/user-in-source-account\u0026rdquo;. This change is necessary for proper permissions delegation when using an IAM user to manage DataSync.\n"
},
{
	"uri": "//localhost:1313/3-createdatasynclocation/3.2-createdestinationlocation/",
	"title": "Create Destination Location",
	"tags": [],
	"description": "",
	"content": "Setting up a DataSync destination location for the S3 bucket in your destination account is a necessary step from your source account. The DataSync console itself doesn\u0026rsquo;t permit creating locations for storage resources in another account directly. Nevertheless, AWS CloudShell comes to the rescue, offering a way to bypass this limitation.\nUsing AWS CloudShell for DataSync Configuration AWS CloudShell is a browser-based shell that is integrated into the AWS Management Console, providing a way to run AWS CLI commands without additional installations.\nNote: If opting to use a command line tool other than CloudShell, your AWS CLI profile must correspond to the source-user-role referenced in the bucket policy. Consult the AWS Command Line Interface User Guide for more details.\nSteps to Create a DataSync Destination Location: Return to the AWS Management Console under your source account. Access the AWS DataSync console. Launch CloudShell by: Clicking on the CloudShell icon next to the search box on the console navigation bar. Or searching for \u0026ldquo;CloudShell\u0026rdquo; in the console search box and selecting it from the results. Prepare the following AWS CLI command by replacing the placeholders: aws datasync create-location-s3 \\ --s3-bucket-arn arn:aws:s3:::\u0026lt;destination-bucket\u0026gt; \\ --s3-config \u0026#39;{ \u0026#34;BucketAccessRoleArn\u0026#34;:\u0026#34;arn:aws:iam::\u0026lt;source-account-id\u0026gt;:role/\u0026lt;DataSync-role-in-source-account\u0026gt;\u0026#34; }\u0026#39; Change \u0026lt;destination-bucket\u0026gt; to the name of your destination S3 bucket.\nReplace \u0026lt;source-account-id\u0026gt; with the ID of your source account.\nSubstitute \u0026lt;DataSync-role-in-source-account\u0026gt; with the role you established for DataSync in the source account.\nIf the destination bucket is in a different region, include \u0026ndash;region followed by the appropriate region code, such as \u0026ndash;region us-east-2.\nExecute the modified command in CloudShell.\nUpon successful execution, you will receive a DataSync location ARN, indicating that the destination location has been established:\n{ \u0026#34;LocationArn\u0026#34;: \u0026#34;arn:aws:datasync:\u0026lt;region\u0026gt;:\u0026lt;source-account-id\u0026gt;:location/loc-\u0026lt;unique-id\u0026gt;\u0026#34; } Verify the new location by going to the Data transfer section and clicking on Locations in the DataSync console. If the location is in a different region, remember to switch to the correct one from the console. For example: "
},
{
	"uri": "//localhost:1313/2-prerequiste/",
	"title": "Preparation steps",
	"tags": [],
	"description": "",
	"content": "Preparation steps In this workshop, we will be constructing based on the following diagram:\n"
},
{
	"uri": "//localhost:1313/3-createdatasynclocation/",
	"title": "Create DataSync Location",
	"tags": [],
	"description": "",
	"content": "Introduction to Creating DataSync Locations for Cross-Account S3 Migrations In this segment of our workshop, we\u0026rsquo;ll focus on a crucial aspect of migrating data between S3 buckets across different AWS accounts: creating AWS DataSync locations. A DataSync location acts as a pointer to either the source or destination of your data transfer. For cross-account S3 migrations, you\u0026rsquo;ll define one location for the source bucket in your source account and another location for the destination bucket in your target account.\nCreating these locations is essential, as it allows DataSync to understand where to pull data from and where to deliver it. This step involves specifying the S3 bucket details and ensuring DataSync has the necessary permissions, via an IAM role, to access these buckets.\nThis process is straightforward yet critical to the success of your data migration efforts, laying the groundwork for the efficient, secure, and reliable transfer of data between AWS accounts.\n"
},
{
	"uri": "//localhost:1313/4--createdatasynctask/",
	"title": "Create &amp; Start DataSync Task",
	"tags": [],
	"description": "",
	"content": "With the preparatory steps completed, including IAM role creation and configuring both source and destination S3 bucket locations, you\u0026rsquo;re now ready to create and start the DataSync transfer task to move your data across AWS accounts.\nCreating and Starting the DataSync Transfer Task Navigate to DataSync in the Source Account: In the AWS Management Console, ensure you\u0026rsquo;re using the DataSync service within your source account.\nInitiate Task Creation:\nExpand Data transfer in the left navigation pane. Choose Tasks, then Create task. Select the Task Region:\nIf your destination bucket resides in a different AWS Region than your source bucket, select the appropriate Region for the destination bucket in the top navigation pane. Important: The DataSync task must be created in the same Region as the destination location to avoid network connection errors. Configure Source Location:\nChoose Choose an existing location. If applicable, select the correct Region where the source bucket resides from the Region dropdown. Select your previously configured source location from Existing locations, then click Next. Configure Destination Location:\nSelect Choose an existing location. Choose the destination location for the S3 bucket you\u0026rsquo;re transferring data to, then click Next. Configure Task Settings:\nProvide a name for your task. Optionally, configure additional settings such as specifying an Amazon CloudWatch log group. Proceed by selecting Next. Review and Create Task:\nReview your task settings for accuracy. Click Create task to finalize the task setup. Start the Transfer Task:\nOn the task\u0026rsquo;s detail page, choose Start. Decide on starting the task with defaults or customizing the start options: Start with defaults for a standard transfer. Start with overriding options if adjustments are needed before execution. Verifying the Data Transfer After the task completes, verify the transfer by checking the destination S3 bucket in your destination account. The data from your source account\u0026rsquo;s S3 bucket should now be present, signifying a successful cross-account migration.\n"
},
{
	"uri": "//localhost:1313/5-cleanup/",
	"title": "Cleanup Resource",
	"tags": [],
	"description": "",
	"content": "Clean-Up Resources Once you\u0026rsquo;ve completed the data transfer task and verified the successful migration of your data across AWS accounts, it\u0026rsquo;s essential to perform clean-up actions to avoid unnecessary costs and resource usage. Follow these steps to clean up the resources used during the migration process:\nStop DataSync Task:\nNavigate to the DataSync console in your source account. Select the completed transfer task. Choose Stop to halt the task execution. Delete DataSync Task:\nAfter stopping the task, select the task again. Click Delete to remove the task from your account. Delete DataSync Locations:\nIn the DataSync console, navigate to Locations. Delete both the source and destination locations associated with the completed task. Remove IAM Roles:\nAccess the IAM console in both your source and destination accounts. Delete the IAM roles created for DataSync, ensuring no residual permissions remain. Revert S3 Bucket Policies:\nReview and modify the bucket policies of your S3 buckets if any changes were made during the setup. Ensure policies are reverted to their original configurations or as required for ongoing operations. Review and Confirm:\nDouble-check all steps to ensure you\u0026rsquo;re deleting the correct resources. Confirm deletion prompts to permanently remove resources from your AWS accounts. Following these steps will help maintain a clean and organized AWS environment while preventing unnecessary charges and ensuring compliance with security best practices. Always verify the removal of resources to avoid unintentional deletions and potential data loss.\n"
},
{
	"uri": "//localhost:1313/categories/",
	"title": "Categories",
	"tags": [],
	"description": "",
	"content": ""
},
{
	"uri": "//localhost:1313/tags/",
	"title": "Tags",
	"tags": [],
	"description": "",
	"content": ""
}]